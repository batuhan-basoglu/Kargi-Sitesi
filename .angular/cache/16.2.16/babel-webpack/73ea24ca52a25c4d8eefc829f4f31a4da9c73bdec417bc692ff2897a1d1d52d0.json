{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nlet ServicesService = class ServicesService {\n  constructor(http) {\n    this.http = http;\n    this.mailApi = 'https://mailthis.to/kargisitesi@gmail.com';\n  }\n  PostMessage(input) {\n    return this.http.post(this.mailApi, input, {\n      responseType: 'text'\n    }).pipe(map(response => {\n      if (response) {\n        return response;\n      }\n    }, error => {\n      return error;\n    }));\n  }\n  static {\n    this.ctorParameters = () => [{\n      type: HttpClient\n    }];\n  }\n};\nServicesService = __decorate([Injectable({\n  providedIn: 'root'\n})], ServicesService);\nexport { ServicesService };","map":{"version":3,"names":["Injectable","HttpClient","map","ServicesService","constructor","http","mailApi","PostMessage","input","post","responseType","pipe","response","error","__decorate","providedIn"],"sources":["/home/arctichawk1/Desktop/Projects/Public/Kargi-Sitesi/src/app/services.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n  private mailApi = 'https://mailthis.to/kargisitesi@gmail.com'\n\n  constructor(private http: HttpClient) { }\n\n  PostMessage(input: any) {\n    return this.http.post(this.mailApi, input, { responseType: 'text' })\n      .pipe(\n        map(\n          (response) => {\n            if (response) {\n              return response;\n            }\n          },\n          (error: any) => {\n            return error;\n          }\n        )\n      )\n  }\n\n}\n"],"mappings":";;;;;;;AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,GAAG,QAAQ,gBAAgB;AAK7B,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,2CAA2C;EAErB;EAExCC,WAAWA,CAACC,KAAU;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,OAAO,EAAEE,KAAK,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC,CACjEC,IAAI,CACHT,GAAG,CACAU,QAAQ,IAAI;MACX,IAAIA,QAAQ,EAAE;QACZ,OAAOA,QAAQ;;IAEnB,CAAC,EACAC,KAAU,IAAI;MACb,OAAOA,KAAK;IACd,CAAC,CACF,CACF;EACL;;;;;;;AAnBWV,eAAe,GAAAW,UAAA,EAH3Bd,UAAU,CAAC;EACVe,UAAU,EAAE;CACb,CAAC,C,EACWZ,eAAe,CAqB3B;SArBYA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}